{"ast":null,"code":"var _jsxFileName = \"/Users/misindelka.dev/Desktop/DEV/RISE_ZELENINY_DEV/Client/src/Modules/Box/Summary/summaryTable.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-nested-ternary */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Row, Column, ProductImage } from '../styles/boxComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SummaryTable = ({\n  productsInBox,\n  finalPrice\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const columns = [{\n    label: `${t('boxTableProductName')}`,\n    fieldName: 'name'\n  }, {\n    label: `${t('boxTableProductCategory')}`,\n    fieldName: 'category'\n  }, {\n    label: `${t('boxTableProductPrice')}`,\n    fieldName: 'price'\n  }, {\n    label: `${t('boxTableTotaLProductPrice')}`,\n    fieldName: 'totalPrice'\n  }, {\n    label: `${t('boxTableTotalProductAmount')}`,\n    fieldName: 'amount'\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: t('boxOrderSummaryLabel')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Column, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), columns.map((column, i) => /*#__PURE__*/_jsxDEV(Column, {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: column.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), productsInBox.map((product, i) => /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        children: /*#__PURE__*/_jsxDEV(ProductImage, {\n          src: `${process.env.PUBLIC_URL + product.image}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 6\n      }, this), columns.map((column, index) => /*#__PURE__*/_jsxDEV(Column, {\n        children: column.fieldName === 'totalPrice' ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: product[column.fieldName].toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this) : column.fieldName === 'price' ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: product[column.fieldName].toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: product[column.fieldName]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this))]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [t('boxTableFinalPrice'), \" : \", finalPrice.toFixed(2), \" eur\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SummaryTable, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = SummaryTable;\nexport default SummaryTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SummaryTable\");","map":{"version":3,"sources":["/Users/misindelka.dev/Desktop/DEV/RISE_ZELENINY_DEV/Client/src/Modules/Box/Summary/summaryTable.tsx"],"names":["React","useTranslation","Row","Column","ProductImage","SummaryTable","productsInBox","finalPrice","t","columns","label","fieldName","map","column","i","product","process","env","PUBLIC_URL","image","index","toFixed"],"mappings":"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","sourcesContent":["/* eslint-disable no-nested-ternary */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { IProductTypes } from '../../../types/types';\n\nimport { Row, Column, ProductImage } from '../styles/boxComponents';\n\ninterface IProps {\n\tproductsInBox: IProductTypes;\n\tfinalPrice: number;\n}\n\nconst SummaryTable: React.FC<IProps> = ({\n\tproductsInBox,\n\tfinalPrice,\n}: IProps) => {\n\tconst { t } = useTranslation();\n\n\tconst columns = [\n\t\t{\n\t\t\tlabel: `${t('boxTableProductName')}`,\n\t\t\tfieldName: 'name',\n\t\t},\n\t\t{\n\t\t\tlabel: `${t('boxTableProductCategory')}`,\n\t\t\tfieldName: 'category',\n\t\t},\n\t\t{\n\t\t\tlabel: `${t('boxTableProductPrice')}`,\n\t\t\tfieldName: 'price',\n\t\t},\n\t\t{\n\t\t\tlabel: `${t('boxTableTotaLProductPrice')}`,\n\t\t\tfieldName: 'totalPrice',\n\t\t},\n\t\t{\n\t\t\tlabel: `${t('boxTableTotalProductAmount')}`,\n\t\t\tfieldName: 'amount',\n\t\t},\n\t];\n\n\treturn (\n\t\t<>\n\t\t\t<Row>\n\t\t\t\t<h3>{t('boxOrderSummaryLabel')}</h3>\n\t\t\t</Row>\n\n\t\t\t<Row>\n\t\t\t\t<Column />\n\t\t\t\t{columns.map((column, i) => (\n\t\t\t\t\t<Column key={i}>\n\t\t\t\t\t\t<h3>{column.label}</h3>\n\t\t\t\t\t</Column>\n\t\t\t\t))}\n\t\t\t</Row>\n\n\t\t\t{productsInBox.map((product, i) => (\n\t\t\t\t<Row key={i}>\n\t\t\t\t\t<Column>\n\t\t\t\t\t\t<ProductImage src={`${process.env.PUBLIC_URL + product.image}`} />\n\t\t\t\t\t</Column>\n\n\t\t\t\t\t{columns.map((column, index) => (\n\t\t\t\t\t\t<Column key={index}>\n\t\t\t\t\t\t\t{column.fieldName === 'totalPrice' ? (\n\t\t\t\t\t\t\t\t<p>{product[column.fieldName].toFixed(2)}</p>\n\t\t\t\t\t\t\t) : column.fieldName === 'price' ? (\n\t\t\t\t\t\t\t\t<p>{product[column.fieldName].toFixed(2)}</p>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<p>{product[column.fieldName]}</p>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t))}\n\t\t\t\t</Row>\n\t\t\t))}\n\t\t\t<Row>\n\t\t\t\t<h3>\n\t\t\t\t\t{t('boxTableFinalPrice')} : {finalPrice.toFixed(2)} eur\n\t\t\t\t</h3>\n\t\t\t</Row>\n\t\t</>\n\t);\n};\nexport default SummaryTable;\n"]},"metadata":{},"sourceType":"module"}