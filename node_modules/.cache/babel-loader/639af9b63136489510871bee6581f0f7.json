{"ast":null,"code":"var _jsxFileName = \"/Users/misindelka.dev/Desktop/DEV/RISE_ZELENINY_DEV/rise-dev/Client/src/Modules/Auth/index.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable no-unused-expressions */\n\n/* eslint-disable no-sequences */\n\n/* eslint-disable operator-linebreak */\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { signin, signup } from '../../Redux/Actions/authActions';\nimport AuthForm from './authForm';\nimport { PageWrapper } from '../../styles/components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialUserValue = {\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst Auth = () => {\n  _s();\n\n  const [userData, setUserData] = useState(initialUserValue);\n  const [signUp, setSignUp] = useState(false);\n  const [arePasswordsSame, setArePasswordSame] = useState(true);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleSubmit = e => {\n    dispatch(signin(userData, history));\n    e.preventDefault();\n  };\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserData({ ...userData,\n      [name]: value\n    });\n  };\n\n  const handleSignUp = e => {\n    if (userData.password === userData.confirmPassword) {\n      dispatch(signup(userData, history));\n      e.preventDefault();\n    } else setArePasswordSame(false);\n  };\n\n  const handleSignUpButton = e => {\n    if (!signUp) {\n      setSignUp(true);\n    }\n\n    if (signUp) {\n      handleSignUp(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: /*#__PURE__*/_jsxDEV(AuthForm, {\n      signUp: signUp,\n      userData: userData,\n      handleInputChange: handleInputChange,\n      arePasswordsSame: arePasswordsSame,\n      handleSubmit: handleSubmit,\n      handleSignUpButton: handleSignUpButton,\n      setSignUp: setSignUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Auth, \"l91auNcb/XfupZwU2qVqXm+T01w=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/misindelka.dev/Desktop/DEV/RISE_ZELENINY_DEV/rise-dev/Client/src/Modules/Auth/index.tsx"],"names":["React","useState","useDispatch","useHistory","signin","signup","AuthForm","PageWrapper","initialUserValue","email","password","confirmPassword","Auth","userData","setUserData","signUp","setSignUp","arePasswordsSame","setArePasswordSame","dispatch","history","handleSubmit","e","preventDefault","handleInputChange","event","name","value","target","handleSignUp","handleSignUpButton"],"mappings":";;;AAAA;;AACA;;AACA;;AACA;;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,iCAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAgBA,MAAMC,gBAAgB,GAAG;AACxBC,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,QAAQ,EAAE,EAFc;AAGxBC,EAAAA,eAAe,EAAE;AAHO,CAAzB;;AAMA,MAAMC,IAAsB,GAAG,MAAM;AAAA;;AACpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAACO,gBAAD,CAAxC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACgB,gBAAD,EAAmBC,kBAAnB,IAAyCjB,QAAQ,CAAC,IAAD,CAAvD;AAEA,QAAMkB,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAMkB,OAAO,GAAGjB,UAAU,EAA1B;;AAEA,QAAMkB,YAAY,GAAIC,CAAD,IAAO;AAC3BH,IAAAA,QAAQ,CAACf,MAAM,CAACS,QAAD,EAAWO,OAAX,CAAP,CAAR;AACAE,IAAAA,CAAC,CAACC,cAAF;AACA,GAHD;;AAKA,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACpC,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AACAd,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,OAACa,IAAD,GAAQC;AAAvB,KAAD,CAAX;AACA,GAHD;;AAKA,QAAME,YAAY,GAAIP,CAAD,IAAO;AAC3B,QAAIT,QAAQ,CAACH,QAAT,KAAsBG,QAAQ,CAACF,eAAnC,EAAoD;AACnDQ,MAAAA,QAAQ,CAACd,MAAM,CAACQ,QAAD,EAAWO,OAAX,CAAP,CAAR;AACAE,MAAAA,CAAC,CAACC,cAAF;AACA,KAHD,MAGOL,kBAAkB,CAAC,KAAD,CAAlB;AACP,GALD;;AAOA,QAAMY,kBAAkB,GAAIR,CAAD,IAAO;AACjC,QAAI,CAACP,MAAL,EAAa;AACZC,MAAAA,SAAS,CAAC,IAAD,CAAT;AACA;;AACD,QAAID,MAAJ,EAAY;AACXc,MAAAA,YAAY,CAACP,CAAD,CAAZ;AACA;AACD,GAPD;;AASA,sBACC,QAAC,WAAD;AAAA,2BACC,QAAC,QAAD;AACC,MAAA,MAAM,EAAEP,MADT;AAEC,MAAA,QAAQ,EAAEF,QAFX;AAGC,MAAA,iBAAiB,EAAEW,iBAHpB;AAIC,MAAA,gBAAgB,EAAEP,gBAJnB;AAKC,MAAA,YAAY,EAAEI,YALf;AAMC,MAAA,kBAAkB,EAAES,kBANrB;AAOC,MAAA,SAAS,EAAEd;AAPZ;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAaA,CA/CD;;GAAMJ,I;UAKYV,W,EACDC,U;;;KANXS,I;AAiDN,eAAeA,IAAf","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable no-sequences */\n/* eslint-disable operator-linebreak */\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { signin, signup } from '../../Redux/Actions/authActions';\nimport AuthForm from './authForm';\nimport { PageWrapper } from '../../styles/components';\n\ninterface IProps {\n\tuserData: {\n\t\temail: string;\n\t\tpassword: string;\n\t\tconfirmPassword: string;\n\t};\n\tsignUp: boolean;\n\tarePasswordsSame: boolean;\n\thandleInputChange: any;\n\thandleSubmit: any;\n\thandleSignUpButton: any;\n\tsetSignUp: any;\n}\n\nconst initialUserValue = {\n\temail: '',\n\tpassword: '',\n\tconfirmPassword: '',\n};\n\nconst Auth: React.FC<IProps> = () => {\n\tconst [userData, setUserData] = useState(initialUserValue);\n\tconst [signUp, setSignUp] = useState(false);\n\tconst [arePasswordsSame, setArePasswordSame] = useState(true);\n\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\n\tconst handleSubmit = (e) => {\n\t\tdispatch(signin(userData, history));\n\t\te.preventDefault();\n\t};\n\n\tconst handleInputChange = (event) => {\n\t\tconst { name, value } = event.target;\n\t\tsetUserData({ ...userData, [name]: value });\n\t};\n\n\tconst handleSignUp = (e) => {\n\t\tif (userData.password === userData.confirmPassword) {\n\t\t\tdispatch(signup(userData, history));\n\t\t\te.preventDefault();\n\t\t} else setArePasswordSame(false);\n\t};\n\n\tconst handleSignUpButton = (e) => {\n\t\tif (!signUp) {\n\t\t\tsetSignUp(true);\n\t\t}\n\t\tif (signUp) {\n\t\t\thandleSignUp(e);\n\t\t}\n\t};\n\n\treturn (\n\t\t<PageWrapper>\n\t\t\t<AuthForm\n\t\t\t\tsignUp={signUp}\n\t\t\t\tuserData={userData}\n\t\t\t\thandleInputChange={handleInputChange}\n\t\t\t\tarePasswordsSame={arePasswordsSame}\n\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t\thandleSignUpButton={handleSignUpButton}\n\t\t\t\tsetSignUp={setSignUp}\n\t\t\t/>\n\t\t</PageWrapper>\n\t);\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}