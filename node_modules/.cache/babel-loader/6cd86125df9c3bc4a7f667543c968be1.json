{"ast":null,"code":"/* eslint-disable operator-linebreak */\n\n/* eslint-disable implicit-arrow-linebreak */\n\n/* eslint-disable function-paren-newline */\n\n/* eslint-disable default-case */\n\n/* eslint-disable no-confusing-arrow */\nimport { ADD_TO_BOX, REMOVE_FROM_BOX, INCREASE_PRODUCT_AMOUNT, DECREASE_PRODUCT_AMOUNT, COUNT_FINAL_PRICE } from '../../constants/actionTypes';\nconst initialStateValue = {\n  data: [],\n  finalPrice: []\n}; // eslint-disable-next-line consistent-return\n\nconst BoxReducer = (state = initialStateValue, action) => {\n  switch (action.type) {\n    case ADD_TO_BOX:\n      {\n        const isProductInBox = state.data.some(product => product._id === action.product._id);\n        const addProduct = { ...action.product,\n          totalPrice: action.product.price,\n          amount: 1\n        };\n\n        if (!isProductInBox) {\n          return { ...state,\n            data: [...state.data, addProduct]\n          };\n        }\n      }\n      break;\n\n    case REMOVE_FROM_BOX:\n      {\n        return { ...state,\n          data: state.data.filter(product => action.product._id !== product._id)\n        };\n      }\n\n    case INCREASE_PRODUCT_AMOUNT:\n      {\n        return { ...state,\n          data: state.data.map(product => product._id === action.product._id ? { ...product,\n            amount: product.amount + 1,\n            totalPrice: product.price + action.product.price * action.product.amount\n          } : product)\n        };\n      }\n\n    case DECREASE_PRODUCT_AMOUNT:\n      {\n        return { ...state,\n          data: state.data.map(product => product._id === action.product._id ? { ...product,\n            amount: product.amount <= 1 ? 1 : product.amount - 1,\n            totalPrice: product.amount <= 1 ? product.price : // eslint-disable-next-line operator-linebreak\n            // eslint-disable-next-line operator-linebreak\n            action.product.price * action.product.amount - product.price\n          } : product)\n        };\n      }\n\n    case COUNT_FINAL_PRICE:\n      {\n        return { ...state,\n          finalPrice: state.data.reduce((acc, product) => acc + product.totalPrice, 0)\n        };\n      }\n  }\n\n  return state;\n};\n\n_c = BoxReducer;\nexport default BoxReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoxReducer\");","map":{"version":3,"sources":["/Users/misindelka.dev/Desktop/DEV/RISE_ZELENINY_DEV/rise-dev/Client/src/Redux/Reducers/BoxReducer.tsx"],"names":["ADD_TO_BOX","REMOVE_FROM_BOX","INCREASE_PRODUCT_AMOUNT","DECREASE_PRODUCT_AMOUNT","COUNT_FINAL_PRICE","initialStateValue","data","finalPrice","BoxReducer","state","action","type","isProductInBox","some","product","_id","addProduct","totalPrice","price","amount","filter","map","reduce","acc"],"mappings":"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","sourcesContent":["/* eslint-disable operator-linebreak */\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable function-paren-newline */\n/* eslint-disable default-case */\n/* eslint-disable no-confusing-arrow */\n\nimport {\n\tADD_TO_BOX,\n\tREMOVE_FROM_BOX,\n\tINCREASE_PRODUCT_AMOUNT,\n\tDECREASE_PRODUCT_AMOUNT,\n\tCOUNT_FINAL_PRICE,\n} from '../../constants/actionTypes';\n\ninterface IProductTypes {\n\t[x: string]: unknown;\n\t_id: number;\n\tname: string;\n\tslug: string;\n\tdesc: string;\n\tcategory: string;\n\tnew: boolean;\n\tamount: number;\n\tquantity: number;\n\timage: string;\n\tmore: string;\n\tprice: number;\n\ttotalPrice: number;\n}\ninterface productState {\n\tdata: IProductTypes[];\n\tfinalPrice: number[];\n}\n\nconst initialStateValue = {\n\tdata: [],\n\tfinalPrice: [],\n};\n\n// eslint-disable-next-line consistent-return\nconst BoxReducer = (state: productState = initialStateValue, action) => {\n\tswitch (action.type) {\n\t\tcase ADD_TO_BOX:\n\t\t\t{\n\t\t\t\tconst isProductInBox = state.data.some(\n\t\t\t\t\t(product) => product._id === action.product._id\n\t\t\t\t);\n\t\t\t\tconst addProduct = {\n\t\t\t\t\t...action.product,\n\t\t\t\t\ttotalPrice: action.product.price,\n\t\t\t\t\tamount: 1,\n\t\t\t\t};\n\t\t\t\tif (!isProductInBox) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...state,\n\t\t\t\t\t\tdata: [...state.data, addProduct],\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase REMOVE_FROM_BOX: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdata: state.data.filter(\n\t\t\t\t\t(product) => action.product._id !== product._id\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\t\tcase INCREASE_PRODUCT_AMOUNT: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdata: state.data.map((product) =>\n\t\t\t\t\tproduct._id === action.product._id\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t...product,\n\t\t\t\t\t\t\t\tamount: product.amount + 1,\n\t\t\t\t\t\t\t\ttotalPrice:\n\t\t\t\t\t\t\t\t\tproduct.price + action.product.price * action.product.amount,\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: product\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\t\tcase DECREASE_PRODUCT_AMOUNT: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdata: state.data.map((product) =>\n\t\t\t\t\tproduct._id === action.product._id\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t...product,\n\t\t\t\t\t\t\t\tamount: product.amount <= 1 ? 1 : product.amount - 1,\n\t\t\t\t\t\t\t\ttotalPrice:\n\t\t\t\t\t\t\t\t\tproduct.amount <= 1\n\t\t\t\t\t\t\t\t\t\t? product.price\n\t\t\t\t\t\t\t\t\t\t: // eslint-disable-next-line operator-linebreak\n\t\t\t\t\t\t\t\t\t\t  // eslint-disable-next-line operator-linebreak\n\t\t\t\t\t\t\t\t\t\t  action.product.price * action.product.amount -\n\t\t\t\t\t\t\t\t\t\t  product.price,\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: product\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\t\tcase COUNT_FINAL_PRICE: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfinalPrice: state.data.reduce<number>(\n\t\t\t\t\t(acc, product) => acc + product.totalPrice,\n\t\t\t\t\t0\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\t}\n\treturn state;\n};\n\nexport default BoxReducer;\n"]},"metadata":{},"sourceType":"module"}