{"ast":null,"code":"var _jsxFileName = \"/Users/misindelka.dev/Desktop/DEV/RISE_ZELENINY_DEV/rise-dev/Client/src/Modules/auth/googleSignIn.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { useGoogleLogin } from 'react-google-login';\nimport { useTranslation } from 'react-i18next';\nimport { ConfirmButton } from './styles/authComponents';\nimport { clientId } from '../../api/googleApis';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GoogleSignIn = () => {\n  _s();\n\n  const [failure, setFailure] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    t\n  } = useTranslation();\n\n  const onSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          result,\n          token\n        }\n      });\n      history.push('/About');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onFailure = () => {\n    setFailure(!failure);\n  };\n\n  const {\n    signIn\n  } = useGoogleLogin({\n    onSuccess,\n    onFailure,\n    clientId\n  });\n  return /*#__PURE__*/_jsxDEV(ConfirmButton, {\n    onClick: signIn,\n    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: t('authWithGoogle')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n};\n\n_s(GoogleSignIn, \"oUSh7VZoyCV1h8KZuehNcAAm03c=\", false, function () {\n  return [useDispatch, useHistory, useTranslation, useGoogleLogin];\n});\n\n_c = GoogleSignIn;\nexport default GoogleSignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleSignIn\");","map":{"version":3,"sources":["/Users/misindelka.dev/Desktop/DEV/RISE_ZELENINY_DEV/rise-dev/Client/src/Modules/auth/googleSignIn.tsx"],"names":["React","useState","useDispatch","useHistory","useGoogleLogin","useTranslation","ConfirmButton","clientId","GoogleSignIn","failure","setFailure","dispatch","history","t","onSuccess","res","result","profileObj","token","tokenId","type","data","push","error","console","log","onFailure","signIn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,QAAT,QAAyB,sBAAzB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,OAAO,GAAGT,UAAU,EAA1B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAQR,cAAc,EAA5B;;AAEA,QAAMS,SAAS,GAAG,MAAOC,GAAP,IAAe;AAChC,UAAMC,MAAM,GAAGD,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEE,UAApB;AACA,UAAMC,KAAK,GAAGH,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEI,OAAnB;;AAEA,QAAI;AACHR,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,IAAI,EAAE;AAAEL,UAAAA,MAAF;AAAUE,UAAAA;AAAV;AAAtB,OAAD,CAAR;AACAN,MAAAA,OAAO,CAACU,IAAR,CAAa,QAAb;AACA,KAHD,CAGE,OAAOC,KAAP,EAAc;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA;AACD,GAVD;;AAYA,QAAMG,SAAS,GAAG,MAAM;AACvBhB,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACA,GAFD;;AAGA,QAAM;AAAEkB,IAAAA;AAAF,MAAavB,cAAc,CAAC;AACjCU,IAAAA,SADiC;AAEjCY,IAAAA,SAFiC;AAGjCnB,IAAAA;AAHiC,GAAD,CAAjC;AAMA,sBACC,QAAC,aAAD;AAAe,IAAA,OAAO,EAAEoB,MAAxB;AAAA,2BACC;AAAA,gBAAKd,CAAC,CAAC,gBAAD;AAAN;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAhCD;;GAAML,Y;UAEYN,W,EACDC,U,EACFE,c,EAiBKD,c;;;KArBdI,Y;AAkCN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { useGoogleLogin } from 'react-google-login';\nimport { useTranslation } from 'react-i18next';\nimport { ConfirmButton } from './styles/authComponents';\nimport { clientId } from '../../api/googleApis';\n\nconst GoogleSignIn = () => {\n\tconst [failure, setFailure] = useState(false);\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\tconst { t } = useTranslation();\n\n\tconst onSuccess = async (res) => {\n\t\tconst result = res?.profileObj;\n\t\tconst token = res?.tokenId;\n\n\t\ttry {\n\t\t\tdispatch({ type: 'AUTH', data: { result, token } });\n\t\t\thistory.push('/About');\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\tconst onFailure = () => {\n\t\tsetFailure(!failure);\n\t};\n\tconst { signIn } = useGoogleLogin({\n\t\tonSuccess,\n\t\tonFailure,\n\t\tclientId,\n\t});\n\n\treturn (\n\t\t<ConfirmButton onClick={signIn}>\n\t\t\t<h4>{t('authWithGoogle')}</h4>\n\t\t</ConfirmButton>\n\t);\n};\n\nexport default GoogleSignIn;\n"]},"metadata":{},"sourceType":"module"}